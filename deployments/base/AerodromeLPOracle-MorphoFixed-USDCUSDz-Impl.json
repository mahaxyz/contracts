{
  "address": "0x79E474952b40230fe7bC43f13858E1a97b0240fA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPriceFor",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xdfb47086ab38bd9d57b40d8f5ea85578dfca978c2e659d4493fe722239402627",
  "receipt": {
    "to": null,
    "from": "0x1F09Ec21d7fd0A21879b919bf0f9C46e6b85CA8b",
    "contractAddress": "0x79E474952b40230fe7bC43f13858E1a97b0240fA",
    "transactionIndex": 73,
    "gasUsed": "451908",
    "logsBloom": "0x
    "blockHash": "0x5135ecb96143f2190633cb0475822d887e3abca6a0d73257b7cd595d87ac63b6",
    "transactionHash": "0xdfb47086ab38bd9d57b40d8f5ea85578dfca978c2e659d4493fe722239402627",
    "logs": [],
    "blockNumber": 19196875,
    "cumulativeGasUsed": "14365642",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "2000000000000000000000000",
    18
  ],
  "numDeployments": 1,
  "solcInputHash": "3071f533a1c71a4abc7b16a9e1c34114",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPriceFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"maha.xyz\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"price()\":{\"notice\":\"Returns the price of 1 asset of collateral token quoted in 1 asset of loan token, scaled by 1e36.\"}},\"notice\":\"A contract that returns a fixed price\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/oracles/MorphoFixedPriceOracle.sol\":\"MorphoFixedPriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/governance/IAggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\ninterface IAggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function getAnswer(uint256) external view returns (int256);\\n\\n  function getTimestamp(uint256) external view returns (uint256);\\n\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function version() external pure returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x3904917413a8e48c63b13368b506360c3de0185a0e226b87876709e674adcd82\",\"license\":\"GPL-3.0\"},\"contracts/periphery/oracles/DumbAggregatorOracle.sol\":{\"content\":\"// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\nimport {IAggregatorV3Interface} from \\\"../../interfaces/governance/IAggregatorV3Interface.sol\\\";\\n\\nabstract contract DumbAggregatorOracle is IAggregatorV3Interface {\\n  uint8 private immutable decimals_ = 18;\\n  string private description_;\\n\\n  constructor(uint8 _decimals, string memory _description) {\\n    decimals_ = _decimals;\\n    description_ = _description;\\n  }\\n\\n  function getAnswer(uint256) public view override returns (int256) {\\n    return latestAnswer();\\n  }\\n\\n  function decimals() public pure returns (uint8) {\\n    return decimals_;\\n  }\\n\\n  function description() public view override returns (string memory) {\\n    return description_;\\n  }\\n\\n  function getTimestamp(uint256) public view override returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  function latestAnswer() public view override returns (int256) {\\n    return int256(getPrice());\\n  }\\n\\n  function getPrice() public view virtual returns (int256 price);\\n\\n  function latestTimestamp() public view override returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  function version() public pure override returns (uint256) {\\n    return 1;\\n  }\\n\\n  function getRoundData(uint80)\\n    public\\n    view\\n    override\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n  {\\n    return (0, latestAnswer(), block.timestamp, block.timestamp, 0);\\n  }\\n\\n  function latestRoundData()\\n    public\\n    view\\n    override\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n  {\\n    return getRoundData(0);\\n  }\\n}\\n\",\"keccak256\":\"0xc6ac53eed949eee276b7368c3da2b2d8382fcb51f0ad9ff56560ed7baed94f82\"},\"contracts/periphery/oracles/MorphoFixedPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\nimport {DumbAggregatorOracle, IAggregatorV3Interface} from \\\"./DumbAggregatorOracle.sol\\\";\\n\\n/// @title FixedPriceOracle\\n/// @author maha.xyz\\n/// @notice A contract that returns a fixed price\\ncontract MorphoFixedPriceOracle is DumbAggregatorOracle {\\n  int256 private immutable price_;\\n\\n  constructor(int256 _price, uint8 _decimals) DumbAggregatorOracle(_decimals, \\\"Fixed Price Oracle\\\") {\\n    price_ = _price;\\n  }\\n\\n  function getPrice() public view override returns (int256 _price) {\\n    _price = price_;\\n  }\\n\\n  function initialize() external {\\n    // nothing\\n  }\\n\\n  function getPriceFor(uint256 amount) public view returns (int256) {\\n    return (latestAnswer() * int256(amount)) / int256(1 * 10 ** decimals());\\n  }\\n\\n  /// Returns the price of 1 asset of collateral token quoted in 1 asset of loan token, scaled by 1e36.\\n  function price() external view returns (uint256 _price) {\\n    _price = uint256(latestAnswer()) * 1e36 / (1 * 10 ** decimals());\\n  }\\n}\\n\",\"keccak256\":\"0x1a34056880ac3e37cfeeaa08d0b440f72f4f189e309dfa69bab6f57a864cdda2\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60c0604052601260805234801561001557600080fd5b5060405161091938038061091983398101604081905261003491610081565b6040805180820190915260128152714669786564205072696365204f7261636c6560701b602082015260ff8216608052819060006100728282610156565b50505060a09190915250610215565b6000806040838503121561009457600080fd5b82519150602083015160ff811681146100ac57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100e157607f821691505b60208210810361010157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561015157600081815260208120601f850160051c8101602086101561012e5750805b601f850160051c820191505b8181101561014d5782815560010161013a565b5050505b505050565b81516001600160401b0381111561016f5761016f6100b7565b6101838161017d84546100cd565b84610107565b602080601f8311600181146101b857600084156101a05750858301515b600019600386901b1c1916600185901b17855561014d565b600085815260208120601f198616915b828110156101e7578886015182559484019460019091019084016101c8565b50858210156102055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516106af61026a6000396000818161013d015281816101990152818161022a0152818161028f0152818161039701526103d901526000818160eb01528181610258015261036101526106af6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638205bf6a1161008c578063a035b1fe11610066578063a035b1fe146101f8578063b5ab58dc14610200578063b633620c14610213578063feaf968c1461022657600080fd5b80638205bf6a1461017f57806398d5fdca1461013b5780639a6fc8f51461018557600080fd5b806354fd4d50116100bd57806354fd4d50146101615780637284e416146101685780638129fc1c1461017d57600080fd5b8063313ce567146100e45780634534cd9c1461011a57806350d25bcd1461013b575b600080fd5b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b61012d6101283660046103fd565b610251565b604051908152602001610111565b7f000000000000000000000000000000000000000000000000000000000000000061012d565b600161012d565b6101706102c8565b6040516101119190610416565b005b4261012d565b6101c1610193366004610464565b506000907f000000000000000000000000000000000000000000000000000000000000000090429081908490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610111565b61012d61035a565b61012d61020e3660046103fd565b6103d5565b61012d6102213660046103fd565b504290565b60007f00000000000000000000000000000000000000000000000000000000000000004280836101c1565b600061027e7f0000000000000000000000000000000000000000000000000000000000000000600a610591565b6102899060016105a0565b6102b3837f00000000000000000000000000000000000000000000000000000000000000006105b7565b6102bd91906105fd565b92915050565b905090565b6060600080546102d79061062b565b80601f01602080910402602001604051908101604052809291908181526020018280546103039061062b565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050905090565b60006103877f0000000000000000000000000000000000000000000000000000000000000000600a610591565b6103929060016105a0565b6103cb7f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006105a0565b6102c39190610665565b60007f00000000000000000000000000000000000000000000000000000000000000006102bd565b60006020828403121561040f57600080fd5b5035919050565b600060208083528351808285015260005b8181101561044357858101830151858201604001528201610427565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561047657600080fd5b813569ffffffffffffffffffff8116811461049057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156104e85781600019048211156104ce576104ce610497565b808516156104db57918102915b93841c93908002906104b2565b509250929050565b6000826104ff575060016102bd565b8161050c575060006102bd565b8160018114610522576002811461052c57610548565b60019150506102bd565b60ff84111561053d5761053d610497565b50506001821b6102bd565b5060208310610133831016604e8410600b841016171561056b575081810a6102bd565b61057583836104ad565b806000190482111561058957610589610497565b029392505050565b600061049060ff8416836104f0565b80820281158282048414176102bd576102bd610497565b80820260008212600160ff1b841416156105d3576105d3610497565b81810583148215176102bd576102bd610497565b634e487b7160e01b600052601260045260246000fd5b60008261060c5761060c6105e7565b600160ff1b82146000198414161561062657610626610497565b500590565b600181811c9082168061063f57607f821691505b60208210810361065f57634e487b7160e01b600052602260045260246000fd5b50919050565b600082610674576106746105e7565b50049056fea2646970667358221220875ed95a664ae64c930baf914ee3f845af91f33af4c73017bbec2703f79461f364736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80638205bf6a1161008c578063a035b1fe11610066578063a035b1fe146101f8578063b5ab58dc14610200578063b633620c14610213578063feaf968c1461022657600080fd5b80638205bf6a1461017f57806398d5fdca1461013b5780639a6fc8f51461018557600080fd5b806354fd4d50116100bd57806354fd4d50146101615780637284e416146101685780638129fc1c1461017d57600080fd5b8063313ce567146100e45780634534cd9c1461011a57806350d25bcd1461013b575b600080fd5b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b61012d6101283660046103fd565b610251565b604051908152602001610111565b7f000000000000000000000000000000000000000000000000000000000000000061012d565b600161012d565b6101706102c8565b6040516101119190610416565b005b4261012d565b6101c1610193366004610464565b506000907f000000000000000000000000000000000000000000000000000000000000000090429081908490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610111565b61012d61035a565b61012d61020e3660046103fd565b6103d5565b61012d6102213660046103fd565b504290565b60007f00000000000000000000000000000000000000000000000000000000000000004280836101c1565b600061027e7f0000000000000000000000000000000000000000000000000000000000000000600a610591565b6102899060016105a0565b6102b3837f00000000000000000000000000000000000000000000000000000000000000006105b7565b6102bd91906105fd565b92915050565b905090565b6060600080546102d79061062b565b80601f01602080910402602001604051908101604052809291908181526020018280546103039061062b565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050905090565b60006103877f0000000000000000000000000000000000000000000000000000000000000000600a610591565b6103929060016105a0565b6103cb7f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006105a0565b6102c39190610665565b60007f00000000000000000000000000000000000000000000000000000000000000006102bd565b60006020828403121561040f57600080fd5b5035919050565b600060208083528351808285015260005b8181101561044357858101830151858201604001528201610427565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561047657600080fd5b813569ffffffffffffffffffff8116811461049057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156104e85781600019048211156104ce576104ce610497565b808516156104db57918102915b93841c93908002906104b2565b509250929050565b6000826104ff575060016102bd565b8161050c575060006102bd565b8160018114610522576002811461052c57610548565b60019150506102bd565b60ff84111561053d5761053d610497565b50506001821b6102bd565b5060208310610133831016604e8410600b841016171561056b575081810a6102bd565b61057583836104ad565b806000190482111561058957610589610497565b029392505050565b600061049060ff8416836104f0565b80820281158282048414176102bd576102bd610497565b80820260008212600160ff1b841416156105d3576105d3610497565b81810583148215176102bd576102bd610497565b634e487b7160e01b600052601260045260246000fd5b60008261060c5761060c6105e7565b600160ff1b82146000198414161561062657610626610497565b500590565b600181811c9082168061063f57607f821691505b60208210810361065f57634e487b7160e01b600052602260045260246000fd5b50919050565b600082610674576106746105e7565b50049056fea2646970667358221220875ed95a664ae64c930baf914ee3f845af91f33af4c73017bbec2703f79461f364736f6c63430008150033",
  "devdoc": {
    "author": "maha.xyz",
    "kind": "dev",
    "methods": {},
    "title": "FixedPriceOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "price()": {
        "notice": "Returns the price of 1 asset of collateral token quoted in 1 asset of loan token, scaled by 1e36."
      }
    },
    "notice": "A contract that returns a fixed price",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 80,
        "contract": "contracts/periphery/oracles/MorphoFixedPriceOracle.sol:MorphoFixedPriceOracle",
        "label": "description_",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}