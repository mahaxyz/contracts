{
  "address": "0xB2140C4BC2a08aa5Ab8754A4869B6Dc7022b5b4C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAPriceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenBPriceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPriceFor",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAPriceFeed",
      "outputs": [
        {
          "internalType": "contract IAggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBPriceFeed",
      "outputs": [
        {
          "internalType": "contract IAggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x4df9930531579bbebbb9b2487285e80e57a7aecf039d7ecd045d5558b7ccaae7",
  "receipt": {
    "to": null,
    "from": "0x1F09Ec21d7fd0A21879b919bf0f9C46e6b85CA8b",
    "contractAddress": "0xB2140C4BC2a08aa5Ab8754A4869B6Dc7022b5b4C",
    "transactionIndex": 78,
    "gasUsed": "553313",
    "logsBloom": "0x
    "blockHash": "0x742081d12b6d7a472adc3a1877da023d5fa238fc422b51a3dcaddcd316b530c2",
    "transactionHash": "0x4df9930531579bbebbb9b2487285e80e57a7aecf039d7ecd045d5558b7ccaae7",
    "logs": [],
    "blockNumber": 19140900,
    "cumulativeGasUsed": "17702050",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xeAA79aaC2decf71F07c3208Df05B198d09c9F971",
    "0xeAA79aaC2decf71F07c3208Df05B198d09c9F971",
    "0x72d509aff75753aaad6a10d3eb98f2dbc58c480d"
  ],
  "numDeployments": 1,
  "solcInputHash": "488a9e656ab0d4e8a43d0d2256be09bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenBPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPriceFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAPriceFeed\",\"outputs\":[{\"internalType\":\"contract IAggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBPriceFeed\",\"outputs\":[{\"internalType\":\"contract IAggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"maha.xyz\",\"details\":\"Reference from https://github.com/AlphaFinanceLab/alpha-homora-v2-contract/blob/master/contracts/oracle/UniswapV2Oracle.sol\",\"kind\":\"dev\",\"methods\":{\"getPrice()\":{\"details\":\"This function fetches reserves from the Nile AMM and uses a pre-defined price for tokens to calculate the LP token price.\",\"returns\":{\"price\":\"The price of the liquidity pool token.\"}}},\"title\":\"AerodromeLPOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice()\":{\"notice\":\"Gets the price of the liquidity pool token.\"}},\"notice\":\"A contract that returns a price of an LP token on Aerdrome.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/oracles/AerodromeLPOracle.sol\":\"AerodromeLPOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/governance/IAggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\ninterface IAggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external pure returns (string memory);\\n\\n  function getAnswer(uint256) external view returns (int256);\\n\\n  function getTimestamp(uint256) external view returns (uint256);\\n\\n  function latestAnswer() external view returns (int256);\\n\\n  function latestTimestamp() external view returns (uint256);\\n\\n  function version() external pure returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x2c6115e44408a3aa6f0e88efed771e91dc8e8ffc92872966e4124a9fd6e1999d\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/periphery/dex/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\n// https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2Pair.sol\\n\\ninterface IUniswapV2Pair {\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  function name() external pure returns (string memory);\\n\\n  function symbol() external pure returns (string memory);\\n\\n  function decimals() external pure returns (uint8);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address owner) external view returns (uint256);\\n\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  function approve(address spender, uint256 value) external returns (bool);\\n\\n  function transfer(address to, uint256 value) external returns (bool);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n  function nonces(address owner) external view returns (uint256);\\n\\n  function permit(\\n    address owner,\\n    address spender,\\n    uint256 value,\\n    uint256 deadline,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n\\n  event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n  event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to);\\n  event Swap(\\n    address indexed sender,\\n    uint256 amount0In,\\n    uint256 amount1In,\\n    uint256 amount0Out,\\n    uint256 amount1Out,\\n    address indexed to\\n  );\\n  event Sync(uint112 reserve0, uint112 reserve1);\\n\\n  function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n  function factory() external view returns (address);\\n\\n  function token0() external view returns (address);\\n\\n  function token1() external view returns (address);\\n\\n  function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n\\n  function price0CumulativeLast() external view returns (uint256);\\n\\n  function price1CumulativeLast() external view returns (uint256);\\n\\n  function kLast() external view returns (uint256);\\n\\n  function mint(address to) external returns (uint256 liquidity);\\n\\n  function burn(address to) external returns (uint256 amount0, uint256 amount1);\\n\\n  function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\\n\\n  function skim(address to) external;\\n\\n  function sync() external;\\n\\n  function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x8ce6ab4e440d6a4d110f1017cc11f74acd84b27630fca016a2aee64a89a88469\",\"license\":\"GPL-3.0\"},\"contracts/periphery/oracles/AerodromeLPOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// \\u2588\\u2588\\u2588\\u2557   \\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557  \\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n// \\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\n// \\u2588\\u2588\\u2551 \\u255a\\u2550\\u255d \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\n// \\u255a\\u2550\\u255d     \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\n\\n// Website: https://maha.xyz\\n// Discord: https://discord.gg/mahadao\\n// Twitter: https://twitter.com/mahaxyz_\\n\\npragma solidity 0.8.21;\\n\\nimport {IAggregatorV3Interface} from \\\"../../interfaces/governance/IAggregatorV3Interface.sol\\\";\\nimport {IUniswapV2Pair} from \\\"../../interfaces/periphery/dex/IUniswapV2Pair.sol\\\";\\n\\n/// @title AerodromeLPOracle\\n/// @author maha.xyz\\n/// @notice A contract that returns a price of an LP token on Aerdrome.\\n/// @dev Reference from\\n/// https://github.com/AlphaFinanceLab/alpha-homora-v2-contract/blob/master/contracts/oracle/UniswapV2Oracle.sol\\ncontract AerodromeLPOracle is IAggregatorV3Interface {\\n  uint8 public immutable decimals = 18;\\n\\n  IUniswapV2Pair public immutable pool;\\n  IAggregatorV3Interface public immutable tokenAPriceFeed;\\n  IAggregatorV3Interface public immutable tokenBPriceFeed;\\n\\n  constructor(address _tokenAPriceFeed, address _tokenBPriceFeed, address _pool) {\\n    tokenAPriceFeed = IAggregatorV3Interface(_tokenAPriceFeed);\\n    tokenBPriceFeed = IAggregatorV3Interface(_tokenBPriceFeed);\\n    pool = IUniswapV2Pair(_pool);\\n  }\\n\\n  function description() public pure override returns (string memory) {\\n    return \\\"An oracle that prices the LP tokens of Aerodrome\\\";\\n  }\\n\\n  function getAnswer(uint256) public view override returns (int256) {\\n    return latestAnswer();\\n  }\\n\\n  function getTimestamp(uint256) public view override returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  function latestAnswer() public view override returns (int256) {\\n    return int256(getPrice());\\n  }\\n\\n  function getPriceFor(uint256 amount) public view returns (int256) {\\n    return (latestAnswer() * int256(amount)) / 1e18;\\n  }\\n\\n  /// @notice Gets the price of the liquidity pool token.\\n  /// @dev This function fetches reserves from the Nile AMM and uses a pre-defined price for tokens to calculate the LP\\n  /// token price.\\n  /// @return price The price of the liquidity pool token.\\n  function getPrice() public view returns (uint256 price) {\\n    (uint256 reserve0, uint256 reserve1,) = pool.getReserves();\\n\\n    int256 px0 = tokenAPriceFeed.latestAnswer();\\n    int256 px1 = tokenBPriceFeed.latestAnswer();\\n\\n    require(px0 > 0 && px1 > 0, \\\"Invalid Price\\\");\\n\\n    uint256 sqrtK = (sqrt(reserve0 * reserve1) * 1e18) / pool.totalSupply();\\n    price = (sqrtK * 2 * sqrt(uint256(px0 * px1)));\\n  }\\n\\n  /// @notice Computes the square root of a given number using the Babylonian method.\\n  /// @dev This function uses an iterative method to compute the square root of a number.\\n  /// @param x The number to compute the square root of.\\n  /// @return y The square root of the given number.\\n  function sqrt(uint256 x) internal pure returns (uint256 y) {\\n    if (x == 0) return 0; // Handle the edge case for 0\\n    uint256 z = (x + 1) / 2;\\n    y = x;\\n    while (z < y) {\\n      y = z;\\n      z = (x / z + z) / 2;\\n    }\\n  }\\n\\n  function latestTimestamp() public view override returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  function version() public pure override returns (uint256) {\\n    return 1;\\n  }\\n\\n  function getRoundData(uint80)\\n    public\\n    view\\n    override\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n  {\\n    return (0, latestAnswer(), block.timestamp, block.timestamp, 0);\\n  }\\n\\n  function latestRoundData()\\n    public\\n    view\\n    override\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\\n  {\\n    return getRoundData(0);\\n  }\\n}\\n\",\"keccak256\":\"0xd88d433b4592985e9cca340954c381817a76c83f5660c5815bc66b73099687c8\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x610100604052601260805234801561001657600080fd5b50604051610a09380380610a098339810160408190526100359161006e565b6001600160a01b0392831660c05290821660e0521660a0526100b1565b80516001600160a01b038116811461006957600080fd5b919050565b60008060006060848603121561008357600080fd5b61008c84610052565b925061009a60208501610052565b91506100a860408501610052565b90509250925092565b60805160a05160c05160e0516109046101056000396000818160f401526104180152600081816101dd0152610392015260008181610138015281816102e901526105180152600061015f01526109046000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637f996b661161008c5780639a6fc8f5116100665780639a6fc8f51461020d578063b5ab58dc14610257578063b633620c1461026a578063feaf968c1461027d57600080fd5b80637f996b66146101d85780638205bf6a146101ff57806398d5fdca1461020557600080fd5b80634534cd9c116100c85780634534cd9c1461019357806350d25bcd146101b457806354fd4d50146101bc5780637284e416146101c357600080fd5b80630ee1232c146100ef57806316f0115b14610133578063313ce5671461015a575b600080fd5b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161012a565b6101a66101a13660046106b0565b610285565b60405190815260200161012a565b6101a66102b3565b60016101a6565b6101cb6102c2565b60405161012a91906106c9565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b426101a6565b6101a66102e2565b61022061021b366004610717565b6105f4565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a00161012a565b6101a66102653660046106b0565b610619565b6101a66102783660046106b0565b504290565b610220610623565b6000670de0b6b3a7640000826102996102b3565b6102a39190610760565b6102ad91906107a6565b92915050565b60006102bd6102e2565b905090565b606060405180606001604052806030815260200161089f60309139905090565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036991906107f7565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610847565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610847565b90506000821380156104aa5750600081135b610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c696420507269636500000000000000000000000000000000000000604482015260640160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190610847565b6105aa6105a58688610860565b610646565b6105bc90670de0b6b3a7640000610860565b6105c69190610877565b90506105d56105a58385610760565b6105e0826002610860565b6105ea9190610860565b9550505050505090565b6000806000806000806106056102b3565b909790965042955085945060009350915050565b60006102ad6102b3565b600080600080600061063560006105f4565b945094509450945094509091929394565b60008160000361065857506000919050565b6000600261066784600161088b565b6106719190610877565b90508291505b818110156106aa5790508060028161068f8186610877565b610699919061088b565b6106a39190610877565b9050610677565b50919050565b6000602082840312156106c257600080fd5b5035919050565b600060208083528351808285015260005b818110156106f6578581018301518582016040015282016106da565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561072957600080fd5b813569ffffffffffffffffffff8116811461074357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b8414161561077c5761077c61074a565b81810583148215176102ad576102ad61074a565b634e487b7160e01b600052601260045260246000fd5b6000826107b5576107b5610790565b600160ff1b8214600019841416156107cf576107cf61074a565b500590565b80516dffffffffffffffffffffffffffff811681146107f257600080fd5b919050565b60008060006060848603121561080c57600080fd5b610815846107d4565b9250610823602085016107d4565b9150604084015163ffffffff8116811461083c57600080fd5b809150509250925092565b60006020828403121561085957600080fd5b5051919050565b80820281158282048414176102ad576102ad61074a565b60008261088657610886610790565b500490565b808201808211156102ad576102ad61074a56fe416e206f7261636c6520746861742070726963657320746865204c5020746f6b656e73206f66204165726f64726f6d65a26469706673582212200684bd0a95f2a7ac6e84087fd5c966fbac3e9a54f6cf86c4656386cf17c4a0f864736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637f996b661161008c5780639a6fc8f5116100665780639a6fc8f51461020d578063b5ab58dc14610257578063b633620c1461026a578063feaf968c1461027d57600080fd5b80637f996b66146101d85780638205bf6a146101ff57806398d5fdca1461020557600080fd5b80634534cd9c116100c85780634534cd9c1461019357806350d25bcd146101b457806354fd4d50146101bc5780637284e416146101c357600080fd5b80630ee1232c146100ef57806316f0115b14610133578063313ce5671461015a575b600080fd5b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161012a565b6101a66101a13660046106b0565b610285565b60405190815260200161012a565b6101a66102b3565b60016101a6565b6101cb6102c2565b60405161012a91906106c9565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b426101a6565b6101a66102e2565b61022061021b366004610717565b6105f4565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a00161012a565b6101a66102653660046106b0565b610619565b6101a66102783660046106b0565b504290565b610220610623565b6000670de0b6b3a7640000826102996102b3565b6102a39190610760565b6102ad91906107a6565b92915050565b60006102bd6102e2565b905090565b606060405180606001604052806030815260200161089f60309139905090565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036991906107f7565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610847565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610847565b90506000821380156104aa5750600081135b610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c696420507269636500000000000000000000000000000000000000604482015260640160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190610847565b6105aa6105a58688610860565b610646565b6105bc90670de0b6b3a7640000610860565b6105c69190610877565b90506105d56105a58385610760565b6105e0826002610860565b6105ea9190610860565b9550505050505090565b6000806000806000806106056102b3565b909790965042955085945060009350915050565b60006102ad6102b3565b600080600080600061063560006105f4565b945094509450945094509091929394565b60008160000361065857506000919050565b6000600261066784600161088b565b6106719190610877565b90508291505b818110156106aa5790508060028161068f8186610877565b610699919061088b565b6106a39190610877565b9050610677565b50919050565b6000602082840312156106c257600080fd5b5035919050565b600060208083528351808285015260005b818110156106f6578581018301518582016040015282016106da565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561072957600080fd5b813569ffffffffffffffffffff8116811461074357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b8414161561077c5761077c61074a565b81810583148215176102ad576102ad61074a565b634e487b7160e01b600052601260045260246000fd5b6000826107b5576107b5610790565b600160ff1b8214600019841416156107cf576107cf61074a565b500590565b80516dffffffffffffffffffffffffffff811681146107f257600080fd5b919050565b60008060006060848603121561080c57600080fd5b610815846107d4565b9250610823602085016107d4565b9150604084015163ffffffff8116811461083c57600080fd5b809150509250925092565b60006020828403121561085957600080fd5b5051919050565b80820281158282048414176102ad576102ad61074a565b60008261088657610886610790565b500490565b808201808211156102ad576102ad61074a56fe416e206f7261636c6520746861742070726963657320746865204c5020746f6b656e73206f66204165726f64726f6d65a26469706673582212200684bd0a95f2a7ac6e84087fd5c966fbac3e9a54f6cf86c4656386cf17c4a0f864736f6c63430008150033",
  "devdoc": {
    "author": "maha.xyz",
    "details": "Reference from https://github.com/AlphaFinanceLab/alpha-homora-v2-contract/blob/master/contracts/oracle/UniswapV2Oracle.sol",
    "kind": "dev",
    "methods": {
      "getPrice()": {
        "details": "This function fetches reserves from the Nile AMM and uses a pre-defined price for tokens to calculate the LP token price.",
        "returns": {
          "price": "The price of the liquidity pool token."
        }
      }
    },
    "title": "AerodromeLPOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPrice()": {
        "notice": "Gets the price of the liquidity pool token."
      }
    },
    "notice": "A contract that returns a price of an LP token on Aerdrome.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}